# Enhanced GitLab CI/CD Pipeline for Smart PR AI Plugin
stages:
  - format
  - review
  - tag

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GEMINI_MODEL: "gemini-1.5-flash"
  
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip
    - node_modules/

format_code:
  stage: format
  image: node:18-alpine
  only:
    - merge_requests
  before_script:
    - apk add --no-cache python3 py3-pip bash git curl
    - pip3 install black autopep8 isort flake8 yapf
    - npm install -g prettier eslint typescript @typescript-eslint/parser
  script:
    - chmod +x scripts/format_files.sh
    - ./scripts/format_files.sh
  artifacts:
    reports:
      junit: format_report.xml
    paths:
      - format_report.xml
      - formatted_files.json
    expire_in: 1 hour
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0

ai_review:
  stage: review
  image: python:3.11-slim
  only:
    - merge_requests
  before_script:
    - pip install --upgrade pip
    - pip install -r scripts/requirements.txt
  script:
    - python scripts/review_pr.py
  after_script:
    - python scripts/generate_summary.py
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
  artifacts:
    reports:
      junit: review_report.xml
    paths:
      - ai_review_status.txt
      - ai_tags.txt
      - review_summary.json
      - security_issues.json
    expire_in: 2 hours

intelligent_tagging:
  stage: tag
  image: python:3.11-slim
  only:
    - merge_requests
  before_script:
    - pip install requests python-gitlab
  script:
    - python scripts/tag_mr.py
  dependencies:
    - ai_review
  variables:
    GIT_STRATEGY: fetch
  artifacts:
    paths:
      - applied_tags.json
    expire_in: 1 hour